q
Lana.new.puts1 4,6,8
Lana.new.puts1
Lana.new.puts
Lana.new.methods - Class.methods
Sheila.new.methods - Class.methods
Danilo.new.methods - Class.methods
q
Sheila.new.methods - Class.methods
Danilo.new.methods - Class.methods
Lana.new.methods - Class.methods
Lana
Sheila
Danilo
q
Danilo2.new.send(metodo)
q
q'y
Danilo2.new.send(metodo, 1,2,3)
Danilo2.new.send("nao_existe", 1,2,3)
Danilo2.new.send(metodo, 1,2,3)
metodo
Danilo2.new.methods - Class.methods
Danilo2.new
Danilo2
metodo
q
Danilo2.new.mostrar("danilo", 1)
Danilo2.new.mostrar
Danilo2.new.methods - Class.methods
Danilo2.methods - Class.methods
q
a.metodo4
a.methods - Class.methods
a = Teste.new
Teste.definir("metodo1", "metodo2", "metodo3", "metodo4")
a.metodo4Teste.definir("metodo1", "metodo2", "metodo3", "metodo4")
a.metodo4
a.metodo3
a.metodo2
a.metodo1
a.methods - Class.methods
q
Classe4.new
Classe2.new
Classe3.new
Classe2.new
Classe2
q
Teste.new.teste123
Teste.definir("teste123")
Teste.new.teste
q
Danilo.instance_eval do
Danilo.instance_eval { def teste; puts "oi"; end  }
Danilo.instance_eval do
Danilo.new
puts classe
classe
n
Object.const_get(classe)
classe
"class #{classe} end"
n
classe
classe.capitalize!
classe
classe.capitalize
classe.downcase
classe.downse
classe.upcase
classe.upcarse
classe.class
classe
q
c
q
a.methods - Class.methods
a = Teste.new
q
Classe1
q
Mostrar
mostrar
q
n
q
"Danilo".constantize
"danilo".constantize
'Class'.constantize
c
q
Danilo.new.mostrar 1,2,3
Danilo.new.mostrar
Danilo.new.methods - Class.methods
Danilo.new
Danilo
n
self
nome_metodo
q
Danilo.new.mostrar 1,2,3
q
n
q
Danilo
Danilo.mostrar 1,2,3
n
q
classe.constantize
classe
n
q
Danilo.new
eval("class Danilo end");
eval("class Danilo;end");
q
Danilo.new
Danilo.nwq
Danilo
n
